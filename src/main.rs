use bigdecimal::BigDecimal;
use std::str::FromStr;


fn pow_new(val1: BigDecimal, val2: i32) -> BigDecimal {
    let mut result = BigDecimal::from(1);
    let mut base: BigDecimal = val1.clone();
    let mut exp: i32 = val2;

    while exp > 0 {
        if exp % 2 == 1 {
            result *= &base;
        }
        base = base.clone() * base;
        exp /= 2;
    }

    result

    // To simplify: result = val1 ^ val2 
    // pow_new returns result when called with the appropriate inputs.
}
// SA = 2(PI)r^2 + 2(PI)(r)(h)

fn main() {
    let big_decimal_3: BigDecimal = BigDecimal::from(3);
    // 2000 digits of Pi 
    // I could make this larger, but with the issues of Windows Powershell & Due to using massive numbers making processing extremely slow, I decided not to. 
    // Besides, I'm already witnessing floating point errors, even though this code is using arbitrary precision to calculate floating pointers.
    let pi_str: &str = "3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632788659361533818279682303019520353018529689957736225994138912497217752834791315155748572424541506959508295331168617278558890750983817546374649393192550604009277016711390098488240128583616035637076601047101819429555961989467678374494482553797747268471040475346462080466842590694912933136770289891521047521620569660240580381501935112533824300355876402474964732639141992726042699227967823547816360093417216412199245863150302861829745557067498385054945885869269956909272107975093029553211653449872027559602364806654991198818347977535663698074265425278625518184175746728909777727938000816470600161452491921732172147723501414419735685481613611573525521334757418494684385233239073941433345477624168625189835694855620992192221842725502542568876717904946016534668049886272327917860857843838279679766814541009538837863609506800642251252051173929848960841284886269456042419652850222106611863067442786220391949450471237137869609563643719172874677646575739624138908658326459958133904780275900";
    let big_decimal_PI: BigDecimal = BigDecimal::from_str(pi_str).unwrap();
    println!("Big PI: {}", &big_decimal_PI.to_string());
    // h = 200 (This was the chosen value for the can) divided by 9 times PI (with 2000 digits)
    let big_decimal_height: BigDecimal = BigDecimal::from(200 / (9 * &big_decimal_PI));
    println!("Big Height: {}", big_decimal_height.to_string());
    // 2(PI)r^2
    // Using my own custom implementation because for some reason powf and powi are not imported...
    let first_value: BigDecimal = BigDecimal::from(2 * &big_decimal_PI * pow_new(big_decimal_3, 2));
    println!("First Big Value: {}", first_value.to_string());
    // 2(PI)(r)(h)
    let second_value: BigDecimal = BigDecimal::from(2 * &big_decimal_PI * 3 * big_decimal_height);
    println!("Second Big Value: {}", second_value.to_string());
    // final_value = SA = 2(PI)r^2 + 2(PI)(r)(h)
    let final_value: BigDecimal = BigDecimal::from(first_value + second_value);
    println!(
        "Final Big Value (Second Big Value + First Big Value): {}",
        final_value.to_string()
    );
}

// Big PI: 3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632788659361533818279682303019520353018529689957736225994138912497217752834791315155748572424541506959508295331168617278558890750983817546374649393192550604009277016711390098488240128583616035637076601047101819429555961989467678374494482553797747268471040475346462080466842590694912933136770289891521047521620569660240580381501935112533824300355876402474964732639141992726042699227967823547816360093417216412199245863150302861829745557067498385054945885869269956909272107975093029553211653449872027559602364806654991198818347977535663698074265425278625518184175746728909777727938000816470600161452491921732172147723501414419735685481613611573525521334757418494684385233239073941433345477624168625189835694855620992192221842725502542568876717904946016534668049886272327917860857843838279679766814541009538837863609506800642251252051173929848960841284886269456042419652850222106611863067442786220391949450471237137869609563643719172874677646575739624138908658326459958133904780275900
// Big Height: 7.073553026306459367505945038778416090420428699575842166562993069284302117076734892893946789611248265
// First Big Value: 56.5486677646162782923275808990310519155490491887519047775490026615406953131517619753046268561581072236786655572390815196476892029719104801710564693463126601141051138486348933799000736032130811887468753597185975619868020303125616682081620969748816343646216742046222862749881778796678410849306844845429270425661189136805871478673765773309265736508765586220666264802039495498787683973849146451349472089697950308665836726551556593501128747870122758921338653403228393294922123339435490480421028872942150843370061205239318195755483851090351140452694326392374969866498697059091732771815429241467324180492923760102262886147440949001438841696402129651254692169864319362220491617426378925366789142610344066606237563592100183223952955526195268766453359458835792893367298042999999707136048991190751711906897337347104402701962443494475654015485602043306347147613870781800564810975519585755977508655711091980446514647685628277175984371608721315498823681766875352400734400495790820825190340347017790015263658955635808857146296191787455390195868507608729034281454351366354333534419239252067894500424949919551026243672803474303641747125271149315961035111014060033517708715834743689077465910872166986300805021772788322314505088641467378818847832749732007315810418210740900685968359450832478728556236317448403166632508432796461865218047378855389170253884330446867034832025608837406405775244549365187504555869068768586103420823860694481681509895419586425536705451512935420027214970930989025945646859224366897943551674531957809762097696496072842566519789841578730263595641946565336777655015259327315163441120375999102884014696470802906144854591179098659023025459555242338669045008323459384025633532904318934198303330945800218597235035253417042507401177859459993169059045766239780922289028297624024897952901902521495441189089034235802661738171699081544971122411560522536921130737281295143127952850208763553751303997919013535213970151967055090108482268481652972145586945111744197638363313234500355849876279246410286044966200
// Second Big Value: 133.3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333387177360194889083798157551118359311567091347111919970613390736168346588323856115953717019295948404602946494744185000835382053828938907817844082740787534102447300366613514143637106732174817514673573769378967125125264056447079528871337002528075216763764098734945720299161947989819660695459252282880023950908211504706654107115465115537749470351315587432259499615084496638931470931314477935427286556523589144798963952323650677534901343433794945870044487990973224282231664821454316074343239641316441116078226455137830281727042129657053549437195751067656188895187899619300921064111918442208198223429757244918440013994027870459677864121969586412487920649140000716119105923548195917925717898382695830453003742251744217637362144488904057326877424905538648024319946881409694334745379909325404411154378400523569485607193075259640283343802650370006970813032661508805460419306243031817108041789122845493576537234904999887538351954653727579791960343293278906181115519447009539152833723011622924112241118237512151637763430409393702486486687833434963442364377047974735852838127628867502175190902537913250126364745594604293067287366409039319221023504968446097490403164804003668153257344775022884274704839800019307251445904144934117998742370216255087839637914173799702367455418983360629637881109695310510550760689536285273699584711020605409053784993737214340638110304093183959378189078792007002360145047046348903441885652783917963919217118814318115379626501821225563885328695489536548944900346194939789632533206443365154641141355423810993400895382853834785504266667011143809035479420211647177124152495591157245365024949926631014901078251118842492911952615671040484045038141470918458454377358542242698601520486041510614794616726213480415983519246728119251793933994022785721533417346249045905482820008005469028537354533604138976651915248615781169803469211434081342951283385333799788544041798067851221617818539086971079829171325248782247416990584364342401347768869699682667165399785509691836759880381079642223700577881000
// Final Big Value (First Big Value + Second Big Value): 189.8820010979496116256609142323643852488823825220852381108823359948740286464850953086379601894914405623964015767279898994634443148078416368801911805383097214531787306832937257655116689749150107835873356543680719804868855685179445620989438813831557131180319189346589476264025415903410585666821518419198649392786314400862318558202637110311793811725529350319401210522338657446777503634544605703632352113648858520170543380658672058616666497340474074508770912902843477791561054810366804958356456159498674432514860169191641846433018752433784935398564370880365943090780928723913187087889772481108640621609001986557400716429167991131095895245839325402322348358759507261839792538490490843808997340833773823851156003606094211094412633390317238352865847379484932894083417148923547903053974709089134407737350341089356146919599805638964558072812479468211885795638190728681974505310264965665302913066865470380970084133292821352435624654952523965868830652579908013909539860915097063857007448388806912860757235492870713857033834543742109117775660467952022313187635466885801343073572072975079517424537191037788538395310566904713035449611757837149395998553378437081492444568672871317944968086063069524214055148137533916918798155928833787858167053773236975761907908613905704689636512708177253751440511022288203185939759878700606799336046121225605425341723968361040834534393064256389766404882430474882815066419829458122388694523445405502286918949204580162751046089623239513211174349120067817952649219369413944292455116417610593680061615713191656884635169468080551489159527275260826314203960159673510103230752909205546249169337612158329955847992074481512857810963821909349812854043802879595672810657056814525355548695970750145228249936331668161349894089812075664209543090804381251840747482674982567140651503423007536951803883650962016142154155218328273090374205494516559706852270698641392173858333028771559220332535273547139352946803882303705889652071950864406226929896395129531438151857276298423701097897064949373016046029171325248782247416990584364342401347768869699682667165399785509691836759880381079642223700577881000
